{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/admin/register": {
            "post": {
                "description": "Allows an admin to create a new API user and receive an API token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Register a new API user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin token",
                        "name": "X-Admin-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API token for the new user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid admin token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/unregister/{ApiToken}": {
            "delete": {
                "description": "Allows an admin to delete a user by API token",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Unregister a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin token",
                        "name": "X-Admin-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User API token to remove",
                        "name": "ApiToken",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted {ApiToken}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid admin token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/message": {
            "post": {
                "description": "Sends a message through the API using the user's token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Send a message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User API token",
                        "name": "X-Api-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Message request payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.MessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message sent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ping": {
            "get": {
                "description": "Simple health check endpoint",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Ping the server",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "services.MessageRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "subscribers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}